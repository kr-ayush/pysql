{
	"sql_questions": [
		{
			"question_id": 1,
			"question": "Show first name, last name, and gender of patients whose gender is 'M'",
			"solution": "SELECT first_name, last_name, gender FROM patients WHERE gender = 'M';",
			"difficulty": "Easy",
			"hints": "",
			"tags": ""
		},
		{
			"question_id": 2,
			"question": "Show first name and last name of patients who does not have allergies.",
			"solution": "SELECT first_name, last_name FROM patients WHERE allergies IS NULL;",
			"difficulty": "Easy",
			"hints": "",
			"tags": ""
		},
		{
			"question_id": 3,
			"question": "Show first name of patients that start with the letter 'C'",
			"solution": "SELECT first_name FROM patients WHERE first_name LIKE 'C%';",
			"difficulty": "Easy",
			"hints": "",
			"tags": ""
		},
		{
			"question_id": 4,
			"question": "Show first name and last name of patients that weight within the range of 100 to 120 (inclusive)",
			"solution": "SELECT first_name, last_name FROM patients WHERE weight <= 120 AND weight >= 100;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 5,
			"question": "Update the patients table for the allergies column. If the patient's allergies is null then replace it with 'NKA'",
			"solution": "UPDATE patients SET allergies = 'NKA' WHERE allergies IS NULL;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 6,
			"question": "Show first name and last name concatenated into one column to show their full name.",
			"solution": "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM patients;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 7,
			"question": "Show first name, last name, and the full province name of each patient.",
			"solution": "SELECT first_name, last_name, province_name FROM patients JOIN provinces_names ON patients.province_id = provinces_names.province_id;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 8,
			"question": "Show how many patients have a birth_date with 2010 as the birth year.",
			"solution": "SELECT COUNT(patients.birth_date) FROM patients WHERE birth_date LIKE '2010%';",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 9,
			"question": "Show the first_name, last_name, and height of the patient with the greatest height.",
			"solution": "SELECT first_name, last_name, MAX(height) AS height FROM patients GROUP BY first_name, last_name ORDER BY height DESC LIMIT 1;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 10,
			"question": "Show all columns for patients who have one of the following patient_ids: 1,45,534,879,1000",
			"solution": "SELECT * FROM patients WHERE patient_id IN (1,45,534,879,1000);",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 11,
			"question": "Show the total number of admissions",
			"solution": "SELECT COUNT(admissions.patient_id) AS total_number_of_admissions FROM admissions;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 12,
			"question": "Show all the columns from admissions where the patient was admitted and discharged on the same day.",
			"solution": "SELECT * FROM admissions WHERE admission_date = discharge_date;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 13,
			"question": "Show the total number of admissions for patient_id 579.",
			"solution": "SELECT patient_id, COUNT(*) AS total_admissions FROM admissions WHERE patient_id = 1 GROUP BY patient_id;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 14,
			"question": "Based on the cities that our patients live in, show unique cities that are in province_id 'NS'?",
			"solution": "SELECT DISTINCT(city) AS unique_cities FROM patients JOIN provinces_names ON patients.province_id = provinces_names.province_id WHERE provinces_names.province_id = 'NS';",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 15,
			"question": "Write a query to find the first_name, last name and birth date of patients who have height more than 160 and weight more than 70",
			"solution": "SELECT first_name, last_name, birth_date FROM patients WHERE height > 160 AND weight > 70;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 16,
			"question": "Write a query to find list of patients first_name, last_name, and allergies from Hamilton where allergies are not null",
			"solution": "SELECT first_name, last_name, allergies FROM patients WHERE city = 'Hamilton' AND allergies IS NOT NULL;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		},
		{
			"question_id": 17,
			"question": "Based on cities where our patient lives in, write a query to display the list of unique city starting with a vowel (a, e, i, o, u). Show the result order in ascending by city.",
			"solution": "SELECT city FROM patients WHERE city SIMILAR TO '[aeiouAEIOU]%' ORDER BY city ASC;",
			"difficulty": "Easy",
			"hints": null,
			"tags": null
		}
	]
}